{"version":3,"sources":["reducer/rooms.reducer.js","reducer/bookings.reducer.js","reducer/visitors.reducer.js","reducer/index.js","store/store.js","components/Spinner/Spinner.jsx","components/StatusBar/StatusBar.jsx","components/Input/Input.jsx","components/Button/Button.jsx","components/RoomForm/RoomForm.jsx","components/RoomTable/RoomTable.jsx","actions/rooms.actions.js","actions/bookings.actions.js","actions/visitors.actions.js","api/index.js","thunk/rooms.thunk.js","thunk/bookings.thunk.js","screens/Rooms/Rooms.jsx","components/Select/Select.jsx","components/BookingForm/BookingForm.jsx","components/BookingTable/BookingTable.jsx","screens/Bookings/Bookings.jsx","components/VisitorForm/VisitorForm.jsx","components/VisitorTable/VisitorTable.jsx","screens/Visitors/Visitors.jsx","thunk/visitors.thunk.js","components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","status","rooms","booking","visitors","roomData","current","loading","error","bookingData","visitorData","combineReducers","state","action","type","payload","filter","room","id","map","console","log","bookings","visitor","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Spinner","className","StatusBar","Input","name","onChange","title","rest","htmlFor","Button","RoomForm","addRoom","updateRoom","clearCurrentRoom","roomTemplate","floor","beds","balcony","roomId","useState","setRoom","useEffect","handleChange","e","target","value","checked","onSubmit","preventDefault","toast","newRoom","bookedAt","Date","toLocaleDateString","available","RoomTable","deleteRoom","setCurrentRoom","index","key","moment","format","onClick","handleEdit","setError","data","getRoomsData","deleteRoomData","setCurrent","getVisitorsData","deleteBookingData","deleteVisitorData","axiosInstance","axios","create","baseURL","responseType","Endpoint","EndpointFactory","roomsStatus","getRoomsThunk","dispatch","a","async","api","get","uriParams","response","Error","message","getVisitorsThunk","connect","getStatus","getRooms","post","addRoomThunk","delete","deleteRoomThunk","put","updateRoomThunk","Select","options","option","BookingForm","addBooking","updateBooking","clearCurrentBooking","bookingTemplate","personName","personId","roomNumber","setBooking","selPerson","find","v","newBooking","valueOf","BookingTable","deleteBooking","setCurrentBooking","getBookings","getVisitors","addBookingThunk","deleteBookingThunk","updateBookingThunk","VisitorForm","addVisitor","updateVisitor","clearCurrentVisitor","visitorTemplate","cardNumber","createdDate","setVisitor","VisitorTable","deleteVisitor","setCurrentVisitor","addVisitorThunk","deleteVisitorThunk","updateVisitorThunk","Navbar","to","activeClassName","App","autoClose","exact","path","component","Rooms","Bookings","Visitors","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a58e1d38.chunk.js","sourcesContent":["const initialState = {\n  status: {\n    rooms: 0,\n    booking: 0,\n    visitors: 0\n  },\n  roomData: [],\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default function roomsReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_STATUS\":\n      return {\n        ...state,\n        loading: false,\n        status: action.payload\n      };\n\n    case \"GET_ROOMS\":\n      return {\n        ...state,\n        loading: false,\n        roomData: action.payload\n      };\n\n    case \"ADD_ROOM\":\n      return {\n        ...state,\n        loading: false,\n        roomData: [...state.roomData, action.payload]\n      };\n\n    case \"DELETE_ROOM\":\n      return {\n        ...state,\n        loading: false,\n        roomData: state.roomData.filter(room => room.id !== action.payload)\n      };\n\n    case \"UPDATE_ROOM\":\n      return {\n        ...state,\n        loading: false,\n        roomData: state.roomData.map(room =>\n          room.id === action.payload.id ? action.payload : room\n        )\n      };\n\n    case \"SET_CURRENT\":\n      return {\n        ...state,\n        current: action.payload\n      };\n\n    case \"CLEAR_CURRENT\":\n      return {\n        ...state,\n        current: null\n      };\n\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n\n    case \"ERROR\":\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  bookingData: [],\n  roomData: [],\n  visitorData: [],\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default function bookingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_BOOKINGS\":\n      return {\n        ...state,\n        bookingData: action.payload,\n        loading: false\n      };\n\n    case \"GET_VISITORS\":\n      return {\n        ...state,\n        visitorData: action.payload,\n        loading: false\n      };\n\n    case \"GET_ROOMS\":\n      return {\n        ...state,\n        roomData: action.payload,\n        loading: false\n      };\n\n    case \"ADD_BOOKING\":\n      return {\n        ...state,\n        bookingData: [...state.bookingData, action.payload],\n        loading: false\n      };\n\n    case \"DELETE_BOOKING\":\n      return {\n        ...state,\n        bookingData: state.bookingData.filter(\n          booking => booking.id !== action.payload\n        ),\n        loading: false\n      };\n\n    case \"UPDATE_BOOKING\":\n      return {\n        ...state,\n        bookingData: state.bookingData.map(booking =>\n          booking.id === action.payload.id ? action.payload : booking\n        ),\n        loading: false\n      };\n\n    case \"SET_CURRENT\":\n      return {\n        ...state,\n        current: action.payload\n      };\n\n    case \"CLEAR_CURRENT\":\n      return {\n        ...state,\n        current: null\n      };\n\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n\n    case \"ERROR\":\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  visitorData: [],\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default function visitorsReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_VISITORS\":\n      return {\n        ...state,\n        visitorData: action.payload,\n        loading: false\n      };\n\n    case \"ADD_VISITOR\":\n      return {\n        ...state,\n        visitorData: [...state.visitorData, action.payload],\n        loading: false\n      };\n\n    case \"DELETE_VISITOR\":\n      return {\n        ...state,\n        visitorData: state.visitorData.filter(\n          visitor => visitor.id !== action.payload\n        ),\n        loading: false\n      };\n\n    case \"UPDATE_VISITOR\":\n      return {\n        ...state,\n        visitorData: state.visitorData.map(visitor =>\n          visitor.id === action.payload.id ? action.payload : visitor\n        ),\n        loading: false\n      };\n\n    case \"SET_CURRENT\":\n      return {\n        ...state,\n        current: action.payload\n      };\n\n    case \"CLEAR_CURRENT\":\n      return {\n        ...state,\n        current: null\n      };\n\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n\n    case \"ERROR\":\n      console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport roomsReducer from \"./rooms.reducer\";\nimport bookingsReducer from \"./bookings.reducer\";\nimport visitorsReducer from \"./visitors.reducer\";\n\nexport default combineReducers({\n  rooms: roomsReducer,\n  bookings: bookingsReducer,\n  visitors: visitorsReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./spinner.styles.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Fragment } from \"react\";\nimport Spinner from \"../Spinner\";\n\nconst StatusBar = ({ status: { rooms, booking, visitors }, loading }) => {\n  return (\n    <div className=\"left-top\">\n      {!loading ? (\n        <Fragment>\n          <div>\n            {rooms} <br /> Rooms\n          </div>\n          <div>\n            {booking} <br /> Bookings\n          </div>\n          <div>\n            {visitors} <br /> Visitors\n          </div>\n        </Fragment>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n\nexport default StatusBar;\n","import React from \"react\";\nimport \"./input.styles.css\";\n\nconst Input = ({ type, name, className, onChange, title, ...rest }) => {\n  return (\n    <div className={className}>\n      <label htmlFor={name}>{title}</label>\n      <input {...rest} type={type} name={name} id={name} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport \"./button.styles.css\";\n\nconst Button = ({ type, className, title, ...rest }) => {\n  return (\n    <button type={type} className={className} {...rest}>\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport { toast } from \"react-toastify\";\n\nconst RoomForm = ({ addRoom, updateRoom, current, clearCurrentRoom }) => {\n  const roomTemplate = {\n    floor: \"\",\n    beds: \"\",\n    balcony: \"\",\n    roomId: \"\"\n  };\n\n  const [room, setRoom] = useState(roomTemplate);\n  const { floor, beds, balcony, roomId } = room;\n\n  useEffect(() => {\n    if (current) {\n      setRoom(current);\n    }\n  }, [current]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (room.id) {\n      updateRoom(room);\n      clearCurrentRoom();\n      setRoom(roomTemplate);\n      return;\n    }\n\n    if (floor === \"\" || beds === \"\" || roomId === \"\") {\n      toast.error(\"Please fill in all fields!\");\n    } else {\n      const newRoom = {\n        bookedAt: new Date().toLocaleDateString(\"en-US\"),\n        available: true,\n        floor,\n        beds,\n        balcony,\n        roomId\n      };\n\n      addRoom(newRoom);\n      setRoom(roomTemplate);\n    }\n  };\n\n  const handleChange = e => {\n    const target = e.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    setRoom({\n      ...room,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"left-bottom\">\n      <h3>Add New Room</h3>\n      <form onSubmit={handleSubmit}>\n        <Input\n          className=\"form-group\"\n          type=\"number\"\n          value={floor}\n          name=\"floor\"\n          id=\"floor\"\n          title=\"Floor\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"number\"\n          value={beds}\n          name=\"beds\"\n          id=\"beds\"\n          title=\"Beds\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"number\"\n          value={roomId}\n          name=\"roomId\"\n          id=\"roomId\"\n          title=\"Room Number\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group checkbox\"\n          type=\"checkbox\"\n          checked={balcony}\n          name=\"balcony\"\n          id=\"balcony\"\n          title=\"Balcony\"\n          onChange={handleChange}\n        />\n        <Button\n          type=\"submit\"\n          className=\"btn\"\n          title={room.id ? \"Update\" : \"Create\"}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default RoomForm;\n","import React from \"react\";\n// import Spinner from \"../Spinner\";\nimport moment from \"moment\";\n\nconst RoomTable = ({ roomData, deleteRoom, setCurrentRoom, loading }) => {\n  const handleDelete = id => {\n    deleteRoom(id);\n  };\n\n  const handleEdit = room => {\n    setCurrentRoom(room);\n  };\n\n  // if (loading) return <Spinner />;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>#ID</th>\n          <th>Booked</th>\n          <th>Floor</th>\n          <th>Beds</th>\n          <th>Balcony</th>\n          <th>Number</th>\n          <th>Edit</th>\n          <th>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {roomData &&\n          roomData.map((room, index) => (\n            <tr key={room.id}>\n              <td>{index + 1}</td>\n              <td>{moment(room.bookedAt).format(\"MM/DD/YYYY\")}</td>\n              <td>{room.floor}</td>\n              <td>{room.beds}</td>\n              <td>{room.balcony ? \"Yes\" : \"No\"}</td>\n              <td>{room.roomId}</td>\n              <td onClick={() => handleEdit(room)}>\n                <i className=\"fa fa-pencil-square-o\"></i>\n              </td>\n              <td onClick={() => handleDelete(room.id)}>\n                <i className=\"fa fa-times-circle-o\"></i>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default RoomTable;\n","export const getStatusData = data => ({\n  type: \"GET_STATUS\",\n  payload: data\n});\n\nexport const setLoading = () => ({\n  type: \"SET_LOADING\"\n});\n\nexport const setError = data => ({\n  type: \"ERROR\",\n  payload: data\n});\n\nexport const getRoomsData = data => ({\n  type: \"GET_ROOMS\",\n  payload: data\n});\n\nexport const addRoomData = data => ({\n  type: \"ADD_ROOM\",\n  payload: data\n});\n\nexport const deleteRoomData = id => ({\n  type: \"DELETE_ROOM\",\n  payload: id\n});\n\nexport const updateRoomData = data => ({\n  type: \"UPDATE_ROOM\",\n  payload: data\n});\n\nexport const setCurrent = data => ({\n  type: \"SET_CURRENT\",\n  payload: data\n});\n\nexport const clearCurrent = () => ({\n  type: \"CLEAR_CURRENT\"\n});\n","export const setLoading = () => ({\n  type: \"SET_LOADING\"\n});\n\nexport const setError = data => ({\n  type: \"ERROR\",\n  payload: data\n});\n\nexport const getBookingsData = data => ({\n  type: \"GET_BOOKINGS\",\n  payload: data\n});\n\nexport const getRoomsData = data => ({\n  type: \"GET_ROOMS\",\n  payload: data\n});\n\nexport const getVisitorsData = data => ({\n  type: \"GET_VISITORS\",\n  payload: data\n});\n\nexport const addBookingData = data => ({\n  type: \"ADD_BOOKING\",\n  payload: data\n});\n\nexport const deleteBookingData = id => ({\n  type: \"DELETE_BOOKING\",\n  payload: id\n});\n\nexport const updateBookingData = data => ({\n  type: \"UPDATE_BOOKING\",\n  payload: data\n});\n\nexport const setCurrent = data => ({\n  type: \"SET_CURRENT\",\n  payload: data\n});\n\nexport const clearCurrent = () => ({\n  type: \"CLEAR_CURRENT\"\n});\n","export const setLoading = () => ({\n  type: \"SET_LOADING\"\n});\n\nexport const setError = data => ({\n  type: \"ERROR\",\n  payload: data\n});\n\nexport const getVisitorsData = data => ({\n  type: \"GET_VISITORS\",\n  payload: data\n});\n\nexport const addVisitorData = data => ({\n  type: \"ADD_VISITOR\",\n  payload: data\n});\n\nexport const deleteVisitorData = id => ({\n  type: \"DELETE_VISITOR\",\n  payload: id\n});\n\nexport const updateVisitorData = data => ({\n  type: \"UPDATE_VISITOR\",\n  payload: data\n});\n\nexport const setCurrent = data => ({\n  type: \"SET_CURRENT\",\n  payload: data\n});\n\nexport const clearCurrent = () => ({\n  type: \"CLEAR_CURRENT\"\n});\n","import axios from \"axios\";\nimport EndpointFactory from \"axios-endpoints\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://it-blog-posts.herokuapp.com/api/\",\n  responseType: \"json\"\n});\n\nconst Endpoint = EndpointFactory(axiosInstance);\n\nexport default {\n  roomsStatus: new Endpoint(\"rooms/status\"),\n  rooms: new Endpoint(({ id = \"\" }) => \"/rooms/\" + id),\n  bookings: new Endpoint(({ id = \"\" }) => \"/roomBookings/\" + id),\n  visitors: new Endpoint(({ id = \"\" }) => \"/visitors/\" + id)\n};\n","import api from \"../api\";\nimport { toast } from \"react-toastify\";\nimport {\n  getStatusData,\n  getRoomsData,\n  addRoomData,\n  deleteRoomData,\n  updateRoomData,\n  setLoading,\n  setError\n} from \"../actions\";\n\nexport const getStatusThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.roomsStatus.get();\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Status\");\n    }\n    dispatch(getStatusData(response.data.status));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const getRoomsThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.rooms.get({\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Rooms\");\n    }\n    dispatch(getRoomsData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const addRoomThunk = room => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.rooms.post(room, {\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Room successfully added!\");\n    }\n    dispatch(addRoomData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const deleteRoomThunk = id => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.rooms.delete({\n      uriParams: {\n        id: id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Room successfully deleted!\");\n    }\n    dispatch(deleteRoomData(id));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const updateRoomThunk = room => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.rooms.put(room, {\n      uriParams: {\n        id: room.id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Room successfully updated!\");\n    }\n    dispatch(updateRoomData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n","import api from \"../api\";\nimport { toast } from \"react-toastify\";\nimport {\n  getBookingsData,\n  getVisitorsData,\n  getRoomsData,\n  addBookingData,\n  deleteBookingData,\n  updateBookingData,\n  setLoading,\n  setError\n} from \"../actions\";\n\nexport const getBookingsThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.bookings.get({\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Bookings\");\n    }\n    dispatch(getBookingsData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const getVisitorsThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.visitors.get({\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Visitors\");\n    }\n    dispatch(getVisitorsData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const getRoomsThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.rooms.get({\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Rooms\");\n    }\n    dispatch(getRoomsData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const addBookingThunk = booking => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.bookings.post(booking, {\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Booking successfully added!\");\n    }\n    dispatch(addBookingData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const deleteBookingThunk = id => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.bookings.delete({\n      uriParams: {\n        id: id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Booking successfully deleted!\");\n    }\n    dispatch(deleteBookingData(id));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const updateBookingThunk = booking => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.bookings.put(booking, {\n      uriParams: {\n        id: booking.id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Booking successfully updated!\");\n    }\n    dispatch(updateBookingData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport StatusBar from \"../../components/StatusBar\";\nimport RoomForm from \"../../components/RoomForm\";\nimport RoomTable from \"../../components/RoomTable\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setCurrent, clearCurrent } from \"../../actions\";\nimport {\n  getStatusThunk,\n  getRoomsThunk,\n  addRoomThunk,\n  deleteRoomThunk,\n  updateRoomThunk\n} from \"../../thunk\";\n\nconst Rooms = ({\n  rooms,\n  getStatus,\n  getRooms,\n  addRoom,\n  deleteRoom,\n  updateRoom,\n  setCurrentRoom,\n  clearCurrentRoom\n}) => {\n  const { status, roomData, current, loading } = rooms;\n\n  useEffect(() => {\n    getRooms();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    getStatus();\n    // eslint-disable-next-line\n  }, [roomData]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-grid\">\n        <div className=\"left\">\n          <StatusBar status={status} loading={loading} />\n          <RoomForm\n            addRoom={addRoom}\n            current={current}\n            updateRoom={updateRoom}\n            clearCurrentRoom={clearCurrentRoom}\n          />\n        </div>\n        <div className=\"right\">\n          <RoomTable\n            loading={loading}\n            roomData={roomData}\n            deleteRoom={deleteRoom}\n            setCurrentRoom={setCurrentRoom}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRooms.propTypes = {\n  rooms: PropTypes.object.isRequired,\n  getStatus: PropTypes.func.isRequired,\n  getRooms: PropTypes.func.isRequired,\n  addRoom: PropTypes.func.isRequired,\n  deleteRoom: PropTypes.func.isRequired,\n  updateRoom: PropTypes.func.isRequired,\n  setCurrentRoom: PropTypes.func.isRequired,\n  clearCurrentRoom: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  rooms: state.rooms\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStatus: () => {\n    dispatch(getStatusThunk());\n  },\n  getRooms: () => {\n    dispatch(getRoomsThunk());\n  },\n  addRoom: room => {\n    dispatch(addRoomThunk(room));\n  },\n  deleteRoom: id => {\n    dispatch(deleteRoomThunk(id));\n  },\n  updateRoom: room => {\n    dispatch(updateRoomThunk(room));\n  },\n  setCurrentRoom: room => {\n    dispatch(setCurrent(room));\n  },\n  clearCurrentRoom: () => {\n    dispatch(clearCurrent());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms);\n","import React from \"react\";\nimport \"./select.styles.css\";\n\nconst Select = ({ name, title, options, className, onChange, id, ...rest }) => {\n  return (\n    <div className={className}>\n      <label htmlFor={name}>{title}</label>\n      <select name={name} id={id} onChange={onChange} {...rest}>\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option.id} value={option[id]}>\n            {option[id]}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport Select from \"../Select\";\nimport { toast } from \"react-toastify\";\n\nconst BookingForm = ({\n  visitorData,\n  roomData,\n  current,\n  addBooking,\n  updateBooking,\n  clearCurrentBooking\n}) => {\n  const bookingTemplate = {\n    personName: \"\",\n    personId: \"\",\n    roomNumber: \"\",\n    bookedAt: \"\"\n  };\n  const [booking, setBooking] = useState(bookingTemplate);\n  const { personName, personId, roomNumber, bookedAt } = booking;\n\n  useEffect(() => {\n    if (current) {\n      setBooking(current);\n    }\n  }, [current]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (booking.id) {\n      updateBooking(booking);\n      clearCurrentBooking();\n      setBooking(bookingTemplate);\n      return;\n    }\n    if (personName === \"\" || personId === \"\" || roomNumber === \"\") {\n      toast.error(\"Please fill in all fields!\");\n    } else {\n      const newBooking = {\n        roomId: new Date().valueOf(),\n        bookedAt,\n        personName,\n        personId,\n        roomNumber\n      };\n\n      addBooking(newBooking);\n      setBooking(bookingTemplate);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === \"personName\") {\n      const selPerson = visitorData.find(v => v.personName === value);\n      setBooking({ ...booking, [name]: value, personId: selPerson.personId });\n      return;\n    }\n    setBooking({\n      ...booking,\n      [name]: value\n    });\n  };\n\n  return (\n    <Fragment>\n      <h3>New Booking</h3>\n      <form onSubmit={handleSubmit}>\n        <Select\n          className=\"form-group select-wrapper\"\n          name=\"personName\"\n          id=\"personName\"\n          title=\"Person Name\"\n          value={personName}\n          options={visitorData}\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"text\"\n          name=\"personId\"\n          id=\"personId\"\n          title=\"Person ID\"\n          value={personId}\n          onChange={() => {}}\n        />\n        <Select\n          className=\"form-group select-wrapper\"\n          name=\"roomNumber\"\n          id=\"roomId\"\n          title=\"Room ID\"\n          value={roomNumber}\n          options={roomData}\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"date\"\n          value={bookedAt}\n          name=\"bookedAt\"\n          id=\"bookedAt\"\n          title=\"Date\"\n          onChange={handleChange}\n        />\n        <Button\n          type=\"submit\"\n          className=\"btn\"\n          title={booking.id ? \"Update\" : \"Book\"}\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nexport default BookingForm;\n","import React from \"react\";\n// import Spinner from \"../Spinner\";\nimport moment from \"moment\";\n\nconst BookingTable = ({\n  bookingData,\n  deleteBooking,\n  setCurrentBooking,\n  loading\n}) => {\n  const handleDelete = id => {\n    deleteBooking(id);\n  };\n\n  const handleEdit = booking => {\n    setCurrentBooking(booking);\n  };\n\n  // if (loading) return <Spinner />;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Person Name</th>\n          <th>Room ID</th>\n          <th>Booked</th>\n          <th>Person ID</th>\n          <th>Edit</th>\n          <th>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {bookingData &&\n          bookingData.map((booking, index) => (\n            <tr key={booking.id}>\n              <td>{index + 1}</td>\n              <td>{booking.personName}</td>\n              <td>{booking.roomNumber}</td>\n              <td>{moment(booking.bookedAt).format(\"MM/DD/YYYY\")}</td>\n              <td>{booking.personId}</td>\n              <td onClick={() => handleEdit(booking)}>\n                <i className=\"fa fa-pencil-square-o\"></i>\n              </td>\n              <td onClick={() => handleDelete(booking.id)}>\n                <i className=\"fa fa-times-circle-o\"></i>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\nexport default BookingTable;\n","import React, { useEffect } from \"react\";\nimport BookingForm from \"../../components/BookingForm\";\nimport BookingTable from \"../../components/BookingTable\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setCurrent, clearCurrent } from \"../../actions\";\nimport {\n  getBookingsThunk,\n  getVisitorsThunk,\n  getRoomsThunk,\n  addBookingThunk,\n  deleteBookingThunk,\n  updateBookingThunk\n} from \"../../thunk\";\n\nconst Bookings = ({\n  bookings,\n  getBookings,\n  getVisitors,\n  getRooms,\n  addBooking,\n  deleteBooking,\n  updateBooking,\n  setCurrentBooking,\n  clearCurrentBooking\n}) => {\n  const { bookingData, visitorData, roomData, current, loading } = bookings;\n\n  useEffect(() => {\n    getBookings();\n    getVisitors();\n    getRooms();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-grid\">\n        <div className=\"b-left\">\n          <BookingForm\n            current={current}\n            roomData={roomData}\n            visitorData={visitorData}\n            addBooking={addBooking}\n            updateBooking={updateBooking}\n            clearCurrentBooking={clearCurrentBooking}\n          />\n        </div>\n        <div className=\"right\">\n          <BookingTable\n            loading={loading}\n            bookingData={bookingData}\n            deleteBooking={deleteBooking}\n            setCurrentBooking={setCurrentBooking}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBookings.propTypes = {\n  bookings: PropTypes.object.isRequired,\n  getBookings: PropTypes.func.isRequired,\n  getVisitors: PropTypes.func.isRequired,\n  addBooking: PropTypes.func.isRequired,\n  deleteBooking: PropTypes.func.isRequired,\n  updateBooking: PropTypes.func.isRequired,\n  setCurrentBooking: PropTypes.func.isRequired,\n  clearCurrentBooking: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bookings: state.bookings\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBookings: () => {\n    dispatch(getBookingsThunk());\n  },\n  getRooms: () => {\n    dispatch(getRoomsThunk());\n  },\n  getVisitors: () => {\n    dispatch(getVisitorsThunk());\n  },\n  addBooking: booking => {\n    dispatch(addBookingThunk(booking));\n  },\n  deleteBooking: id => {\n    dispatch(deleteBookingThunk(id));\n  },\n  updateBooking: booking => {\n    dispatch(updateBookingThunk(booking));\n  },\n  setCurrentBooking: booking => {\n    dispatch(setCurrent(booking));\n  },\n  clearCurrentBooking: () => {\n    dispatch(clearCurrent());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bookings);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport { toast } from \"react-toastify\";\n\nconst VisitorForm = ({\n  current,\n  addVisitor,\n  updateVisitor,\n  clearCurrentVisitor\n}) => {\n  const visitorTemplate = {\n    personName: \"\",\n    personId: \"\",\n    cardNumber: \"\",\n    createdDate: \"\"\n  };\n\n  const [visitor, setVisitor] = useState(visitorTemplate);\n  const { personName, personId, cardNumber, createdDate } = visitor;\n\n  useEffect(() => {\n    if (current) {\n      setVisitor(current);\n    }\n  }, [current]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (visitor.id) {\n      updateVisitor(visitor);\n      clearCurrentVisitor();\n      setVisitor(visitorTemplate);\n      return;\n    }\n    if (personName === \"\" || personId === \"\" || cardNumber === \"\") {\n      toast.error(\"Please fill in all fields\");\n    } else {\n      const newVisitor = {\n        personName,\n        personId,\n        cardNumber,\n        createdDate\n      };\n\n      addVisitor(newVisitor);\n      setVisitor(visitorTemplate);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setVisitor({\n      ...visitor,\n      [name]: value\n    });\n  };\n\n  return (\n    <Fragment>\n      <h3>Add New Person</h3>\n      <form onSubmit={handleSubmit}>\n        <Input\n          className=\"form-group\"\n          type=\"text\"\n          value={personName}\n          name=\"personName\"\n          id=\"personName\"\n          title=\"Person Name\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"number\"\n          value={personId}\n          name=\"personId\"\n          id=\"personId\"\n          title=\"Person ID\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"number\"\n          value={cardNumber}\n          name=\"cardNumber\"\n          id=\"cardNumber\"\n          title=\"Card Number\"\n          onChange={handleChange}\n        />\n        <Input\n          className=\"form-group\"\n          type=\"date\"\n          value={createdDate}\n          name=\"createdDate\"\n          id=\"createdDate\"\n          title=\"Date\"\n          onChange={handleChange}\n        />\n        <Button\n          type=\"submit\"\n          className=\"btn\"\n          title={visitor.id ? \"Update\" : \"Save\"}\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nexport default VisitorForm;\n","import React from \"react\";\n// import Spinner from \"../Spinner\";\nimport moment from \"moment\";\n\nconst VisitorTable = ({\n  visitorData,\n  deleteVisitor,\n  setCurrentVisitor,\n  loading\n}) => {\n  const handleDelete = id => {\n    deleteVisitor(id);\n  };\n\n  const handleEdit = visitor => {\n    setCurrentVisitor(visitor);\n  };\n\n  // if (loading) return <Spinner />;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Person Name</th>\n          <th>Person ID</th>\n          <th>Date</th>\n          <th>Card Number</th>\n          <th>Edit</th>\n          <th>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {visitorData &&\n          visitorData.map((visitor, index) => (\n            <tr key={visitor.id}>\n              <td>{index + 1}</td>\n              <td>{visitor.personName}</td>\n              <td>{visitor.personId}</td>\n              <td>{moment(visitor.createdDate).format(\"MM/DD/YYYY\")}</td>\n              <td>{visitor.cardNumber}</td>\n              <td onClick={() => handleEdit(visitor)}>\n                <i className=\"fa fa-pencil-square-o\"></i>\n              </td>\n              <td onClick={() => handleDelete(visitor.id)}>\n                <i className=\"fa fa-times-circle-o\"></i>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default VisitorTable;\n","import React, { useEffect } from \"react\";\nimport VisitorForm from \"../../components/VisitorForm\";\nimport VisitorTable from \"../../components/VisitorTable\";\nimport PropTypes from \"prop-types\";\nimport { setCurrent, clearCurrent } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport {\n  getVisitorsThunk,\n  addVisitorThunk,\n  deleteVisitorThunk,\n  updateVisitorThunk\n} from \"../../thunk\";\n\nconst Visitors = ({\n  visitors,\n  getVisitors,\n  addVisitor,\n  deleteVisitor,\n  updateVisitor,\n  setCurrentVisitor,\n  clearCurrentVisitor\n}) => {\n  useEffect(() => {\n    getVisitors();\n    // eslint-disable-next-line\n  }, []);\n\n  const { visitorData, current, loading } = visitors;\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-grid\">\n        <div className=\"b-left\">\n          <VisitorForm\n            current={current}\n            addVisitor={addVisitor}\n            updateVisitor={updateVisitor}\n            clearCurrentVisitor={clearCurrentVisitor}\n          />\n        </div>\n        <div className=\"right\">\n          <VisitorTable\n            loading={loading}\n            visitorData={visitorData}\n            deleteVisitor={deleteVisitor}\n            setCurrentVisitor={setCurrentVisitor}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nVisitors.propTypes = {\n  visitors: PropTypes.object.isRequired,\n  getVisitors: PropTypes.func.isRequired,\n  addVisitor: PropTypes.func.isRequired,\n  deleteVisitor: PropTypes.func.isRequired,\n  updateVisitor: PropTypes.func.isRequired,\n  setCurrentVisitor: PropTypes.func.isRequired,\n  clearCurrentVisitor: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  visitors: state.visitors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getVisitors: () => {\n    dispatch(getVisitorsThunk());\n  },\n  addVisitor: visitor => {\n    dispatch(addVisitorThunk(visitor));\n  },\n  deleteVisitor: id => {\n    dispatch(deleteVisitorThunk(id));\n  },\n  updateVisitor: visitor => {\n    dispatch(updateVisitorThunk(visitor));\n  },\n  setCurrentVisitor: visitor => {\n    dispatch(setCurrent(visitor));\n  },\n  clearCurrentVisitor: () => {\n    dispatch(clearCurrent());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visitors);\n","import api from \"../api\";\nimport { toast } from \"react-toastify\";\nimport {\n  getVisitorsData,\n  addVisitorData,\n  deleteVisitorData,\n  updateVisitorData,\n  setLoading,\n  setError\n} from \"../actions\";\n\nexport const getVisitorsThunk = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.visitors.get({\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(\"Cannot get Visitors\");\n    }\n    dispatch(getVisitorsData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const addVisitorThunk = visitor => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.visitors.post(visitor, {\n      uriParams: {\n        id: \"\"\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Visitor successfully added!\");\n    }\n    dispatch(addVisitorData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const deleteVisitorThunk = id => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.visitors.delete({\n      uriParams: {\n        id: id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Visitor successfully deleted!\");\n    }\n    dispatch(deleteVisitorData(id));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n\nexport const updateVisitorThunk = visitor => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const response = await api.visitors.put(visitor, {\n      uriParams: {\n        id: visitor.id\n      }\n    });\n    if (response.status === 200) {\n      toast(\"Visitor successfully updated!\");\n    }\n    dispatch(updateVisitorData(response.data));\n  } catch (err) {\n    dispatch(setError(err.response.data.error.message));\n  }\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navbar.styles.css\";\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul className=\"nav-links\">\n        <li>\n          <NavLink to=\"/rooms\" activeClassName=\"chosen\" className=\"link-item\">\n            Rooms\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/bookings\"\n            activeClassName=\"chosen\"\n            className=\"link-item\"\n          >\n            Bookings\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/visitors\"\n            activeClassName=\"chosen\"\n            className=\"link-item\"\n          >\n            Visitors\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Rooms from \"./screens/Rooms\";\nimport Bookings from \"./screens/Bookings\";\nimport Visitors from \"./screens/Visitors\";\nimport Navbar from \"./components/Navbar\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <HashRouter>\n        <Navbar />\n        <ToastContainer autoClose={2000} />\n        <Switch>\n          <Route exact path=\"/rooms\" component={Rooms} />\n          <Route exact path=\"/bookings\" component={Bookings} />\n          <Route exact path=\"/visitors\" component={Visitors} />\n          <Route render={() => <Redirect to=\"/rooms\" />} />\n        </Switch>\n      </HashRouter>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}